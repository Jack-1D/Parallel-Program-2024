[1mdiff --git a/.vscode/launch.json b/.vscode/launch.json[m
[1mnew file mode 100644[m
[1mindex 0000000..dff49d5[m
[1m--- /dev/null[m
[1m+++ b/.vscode/launch.json[m
[36m@@ -0,0 +1,31 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "configurations": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "name": "C/C++: gcc 建置及偵錯使用中的檔案",[m
[32m+[m[32m            "type": "cppdbg",[m
[32m+[m[32m            "request": "launch",[m
[32m+[m[32m            "program": "${fileDirname}/${fileBasenameNoExtension}",[m
[32m+[m[32m            "args": [],[m
[32m+[m[32m            "stopAtEntry": false,[m
[32m+[m[32m            "cwd": "${fileDirname}",[m
[32m+[m[32m            "environment": [],[m
[32m+[m[32m            "externalConsole": false,[m
[32m+[m[32m            "MIMode": "gdb",[m
[32m+[m[32m            "setupCommands": [[m
[32m+[m[32m                {[m
[32m+[m[32m                    "description": "啟用 gdb 的美化顯示",[m
[32m+[m[32m                    "text": "-enable-pretty-printing",[m
[32m+[m[32m                    "ignoreFailures": true[m
[32m+[m[32m                },[m
[32m+[m[32m                {[m
[32m+[m[32m                    "description": "將反組譯碼變體設為 Intel",[m
[32m+[m[32m                    "text": "-gdb-set disassembly-flavor intel",[m
[32m+[m[32m                    "ignoreFailures": true[m
[32m+[m[32m                }[m
[32m+[m[32m            ],[m
[32m+[m[32m            "preLaunchTask": "C/C++: gcc 建置使用中檔案",[m
[32m+[m[32m            "miDebuggerPath": "/usr/bin/gdb"[m
[32m+[m[32m        }[m
[32m+[m[32m    ],[m
[32m+[m[32m    "version": "2.0.0"[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/.vscode/settings.json b/.vscode/settings.json[m
[1mnew file mode 100644[m
[1mindex 0000000..311ec69[m
[1m--- /dev/null[m
[1m+++ b/.vscode/settings.json[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "files.associations": {[m
[32m+[m[32m        "sstream": "c",[m
[32m+[m[32m        "*.inc": "c"[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/.vscode/tasks.json b/.vscode/tasks.json[m
[1mnew file mode 100644[m
[1mindex 0000000..83ac441[m
[1m--- /dev/null[m
[1m+++ b/.vscode/tasks.json[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m{[m
[32m+[m[32m    "tasks": [[m
[32m+[m[32m        {[m
[32m+[m[32m            "type": "cppbuild",[m
[32m+[m[32m            "label": "C/C++: gcc 建置使用中檔案",[m
[32m+[m[32m            "command": "/usr/bin/gcc",[m
[32m+[m[32m            "args": [[m
[32m+[m[32m                "-fdiagnostics-color=always",[m
[32m+[m[32m                "-g",[m
[32m+[m[32m                "${file}",[m
[32m+[m[32m                "-o",[m
[32m+[m[32m                "${fileDirname}/${fileBasenameNoExtension}"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "options": {[m
[32m+[m[32m                "cwd": "${fileDirname}"[m
[32m+[m[32m            },[m
[32m+[m[32m            "problemMatcher": [[m
[32m+[m[32m                "$gcc"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "group": "build",[m
[32m+[m[32m            "detail": "偵錯工具產生的工作。"[m
[32m+[m[32m        }[m
[32m+[m[32m    ],[m
[32m+[m[32m    "version": "2.0.0"[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/ucp/core/ucp_worker.c b/src/ucp/core/ucp_worker.c[m
[1mindex 5adcee9..2179834 100644[m
[1m--- a/src/ucp/core/ucp_worker.c[m
[1m+++ b/src/ucp/core/ucp_worker.c[m
[36m@@ -1853,6 +1853,8 @@[m [mucp_worker_print_used_tls(ucp_worker_h worker, ucp_worker_cfg_index_t cfg_index)[m
     ucs_string_buffer_rtrim(&strb, "; ");[m
 [m
     ucs_info("%s", ucs_string_buffer_cstr(&strb));[m
[32m+[m[32m    ucp_config_print(NULL, stdout, NULL, UCS_CONFIG_PRINT_TLS);[m
[32m+[m[32m    printf("%s\n", ucs_string_buffer_cstr(&strb));[m
 }[m
 [m
 static ucs_status_t ucp_worker_init_mpools(ucp_worker_h worker)[m
[1mdiff --git a/src/ucs/config/parser.c b/src/ucs/config/parser.c[m
[1mindex a13d508..67db31a 100644[m
[1m--- a/src/ucs/config/parser.c[m
[1m+++ b/src/ucs/config/parser.c[m
[36m@@ -1878,8 +1878,45 @@[m [mvoid ucs_config_parser_print_opts(FILE *stream, const char *title, const void *o[m
     }[m
 [m
     // TODO: PP-HW-UCX[m
[31m-    if (flags /*& UCS_CONFIG_PRINT_TLS*/) {[m
[32m+[m[32m    if (flags & UCS_CONFIG_PRINT_TLS) {[m
[32m+[m[32m        int num_used_vars;[m
[32m+[m[32m        char* match_char = "UCX_TLS";[m
[32m+[m[32m        ucs_string_buffer_t used_vars_strb;[m
[32m+[m[32m        char **envp, *envstr;[m
[32m+[m[32m        // size_t prefix_len;[m
[32m+[m[32m        char *var_name;[m
[32m+[m[32m        khiter_t iter;[m
[32m+[m[32m        char *saveptr;[m
[32m+[m[32m        // prefix_len      = strlen(opts);[m
[32m+[m[32m        num_used_vars   = 0;[m
[32m+[m[32m        ucs_string_buffer_init(&used_vars_strb);[m
[32m+[m[32m        pthread_mutex_lock(&ucs_config_parser_env_vars_hash_lock);[m
[32m+[m[32m        for (envp = environ; *envp != NULL; ++envp) {[m
[32m+[m[32m            envstr = ucs_strdup(*envp, "env_str");[m
[32m+[m[32m            if (envstr == NULL) {[m
[32m+[m[32m                continue;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            var_name = strtok_r(envstr, "=", &saveptr);[m
[32m+[m[32m            // if (!var_name || strncmp(var_name, opts, prefix_len)) {[m
[32m+[m[32m            //     ucs_free(envstr);[m
[32m+[m[32m            //     continue; /* Not UCX */[m
[32m+[m[32m            // }[m
[32m+[m
[32m+[m[32m            iter = kh_get(ucs_config_env_vars, &ucs_config_parser_env_vars, var_name);[m
[32m+[m[32m            if (iter != kh_end(&ucs_config_parser_env_vars) && !strncmp(*envp, match_char, strlen(match_char))) {[m
[32m+[m[32m                ucs_string_buffer_appendf(&used_vars_strb, "%s ", *envp);[m
[32m+[m[32m                ++num_used_vars;[m
[32m+[m[32m            }[m
 [m
[32m+[m[32m            ucs_free(envstr);[m
[32m+[m[32m        }[m
[32m+[m[32m        pthread_mutex_unlock(&ucs_config_parser_env_vars_hash_lock);[m
[32m+[m[32m        if (num_used_vars > 0) {[m
[32m+[m[32m            ucs_string_buffer_rtrim(&used_vars_strb, " ");[m
[32m+[m[32m            printf("%s\n", ucs_string_buffer_cstr(&used_vars_strb));[m
[32m+[m[32m        }[m
[32m+[m[32m        ucs_string_buffer_cleanup(&used_vars_strb);[m
     }[m
 [m
     if (flags & UCS_CONFIG_PRINT_HEADER) {[m
[1mdiff --git a/src/ucs/config/types.h b/src/ucs/config/types.h[m
[1mindex c300a6b..cf2c72a 100644[m
[1m--- a/src/ucs/config/types.h[m
[1m+++ b/src/ucs/config/types.h[m
[36m@@ -90,7 +90,8 @@[m [mtypedef enum {[m
     UCS_CONFIG_PRINT_HEADER          = UCS_BIT(1),[m
     UCS_CONFIG_PRINT_DOC             = UCS_BIT(2),[m
     UCS_CONFIG_PRINT_HIDDEN          = UCS_BIT(3),[m
[31m-    UCS_CONFIG_PRINT_COMMENT_DEFAULT = UCS_BIT(4)[m
[32m+[m[32m    UCS_CONFIG_PRINT_COMMENT_DEFAULT = UCS_BIT(4),[m
[32m+[m[32m    UCS_CONFIG_PRINT_TLS             = UCS_BIT(5)[m
 } ucs_config_print_flags_t;[m
 [m
 [m
[1mdiff --git a/test/run.batch b/test/run.batch[m
[1mindex b944906..4c20be8 100644[m
[1m--- a/test/run.batch[m
[1m+++ b/test/run.batch[m
[36m@@ -5,7 +5,6 @@[m
 #SBATCH --ntasks=2[m
 #SBATCH --time=00:01:00[m
 #SBATCH --mem=1000[m
[31m-#SBATCH --partition=test[m
 [m
 module load openmpi/4.1.6[m
 [m
[36m@@ -16,4 +15,5 @@[m [mld_preload_paths=$(find "$ucx_lib_directory" -name 'libucp.so.0' -o -name 'libuc[m
 echo $ld_preload_paths[m
 [m
 #srun --export LD_PRELOAD=${ld_preload_paths}:${LD_PRELOAD} /home/ta/willian/osu/osu-micro-benchmarks-7.3/c/mpi/pt2pt/standard/osu_latency[m
[31m-srun --export LD_PRELOAD=${ld_preload_paths}:${LD_PRELOAD} $HOME/UCX-lsalab/test/mpi/osu/pt2pt/standard/osu_latency[m
[32m+[m[32m# srun --export LD_PRELOAD=${ld_preload_paths}:${LD_PRELOAD},UCX_TLS=ud_verbs $HOME/UCX-lsalab/test/mpi/osu/pt2pt/osu_latency[m
[32m+[m[32msrun --export LD_PRELOAD=${ld_preload_paths}:${LD_PRELOAD},UCX_TLS=ud_verbs $HOME/UCX-lsalab/test/mpi/osu/pt2pt/osu_bw[m
